@section data
__str_0 = "\r\n"
__str_1 = "power of memoization!"
@section text
CALL main
HALT

print_num:
PUSHR fp
MOV fp, sp
PUSH16 65530
PUSHR fp
ADD
POPR sp
LDR [fp, 6]
STR [fp, 0]
PUSHR sp
PUSH16 6
SUB
POPR sp
PUSHR sp
PUSH16 2
ADD
STR [fp, -2]
PUSH16 0
STR [fp, -4]
LDR [fp, 0]
PUSH16 0
CMP
JLT L0
JMP L2

L0:
PUSH16 45
POPR r0
INT 0
LDR [fp, 0]
NEG
STR [fp, 0]

L2:
LDR [fp, 0]
PUSH16 0
CMP
JEQ L5
JMP L7

L5:
JMP L4

L7:
LDR [fp, 0]
PUSH16 10
MOD
PUSH16 48
ADD
PUSH16 255
AND
LDR [fp, -2]
LDR [fp, -4]
PUSH16 1
MUL
ADD
STB
LDR [fp, -4]
PUSH16 1
ADD
STR [fp, -4]
LDR [fp, 0]
PUSH16 10
DIV
STR [fp, 0]
JMP L2

L4:
LDR [fp, -4]
PUSH16 1
SUB
STR [fp, -4]
LDR [fp, -4]
PUSH16 0
CMP
JLT L10
JMP L12

L10:
JMP L9

L12:
LDR [fp, -2]
LDR [fp, -4]
PUSH16 1
MUL
ADD
LDB
POPR r0
INT 0
JMP L4

L9:
MOV sp, fp
POPR fp
RET

fib:
PUSHR fp
MOV fp, sp
PUSH16 65534
PUSHR fp
ADD
POPR sp
LDR [fp, 6]
PUSH16 1
CMP
JGT L15
JMP L13
JMP L15

L13:
PUSH16 1
LDR [fp, 8]
LDR [fp, 6]
PUSH16 2
MUL
ADD
STW

L15:
LDR [fp, 8]
LDR [fp, 6]
PUSH16 2
MUL
ADD
LDW
PUSH16 0
CMP
JEQ L18
JMP L16
JMP L18

L16:
LDR [fp, 8]
LDR [fp, 6]
PUSH16 2
MUL
ADD
LDW
STR [fp, 10]
MOV sp, fp
POPR fp
RET

L18:
PUSH16 0
LDR [fp, 8]
LDR [fp, 6]
PUSH16 1
SUB
CALL fib
PUSHR sp
PUSH16 2
PUSH16 2
MUL
ADD
POPR sp
PUSH16 0
LDR [fp, 8]
LDR [fp, 6]
PUSH16 2
SUB
CALL fib
PUSHR sp
PUSH16 2
PUSH16 2
MUL
ADD
POPR sp
ADD
STR [fp, 0]
LDR [fp, 0]
LDR [fp, 8]
LDR [fp, 6]
PUSH16 2
MUL
ADD
STW
LDR [fp, 0]
STR [fp, 10]
MOV sp, fp
POPR fp
RET
MOV sp, fp
POPR fp
RET

print_string:
PUSHR fp
MOV fp, sp
PUSH16 65534
PUSHR fp
ADD
POPR sp
PUSH16 0
STR [fp, 0]

L19:
LDR [fp, 6]
LDR [fp, 0]
PUSH16 1
MUL
ADD
LDB
PUSH16 0
CMP
JEQ L21
JMP L23

L21:
JMP L20

L23:
LDR [fp, 6]
LDR [fp, 0]
PUSH16 1
MUL
ADD
LDB
POPR r0
INT 0
LDR [fp, 0]
PUSH16 1
ADD
STR [fp, 0]
JMP L19

L20:
MOV sp, fp
POPR fp
RET

main:
PUSHR fp
MOV fp, sp
PUSH16 65530
PUSHR fp
ADD
POPR sp
PUSH16 0
STR [fp, 0]
PUSH16 23
STR [fp, -2]
PUSHR sp
PUSH16 46
SUB
POPR sp
PUSHR sp
PUSH16 2
ADD
STR [fp, -4]

L24:
LDR [fp, 0]
LDR [fp, -2]
PUSH16 1
SUB
CMP
JGT L26
JMP L28

L26:
JMP L25

L28:
PUSH16 0
LDR [fp, -4]
LDR [fp, 0]
PUSH16 2
MUL
ADD
STW
LDR [fp, 0]
PUSH16 1
ADD
STR [fp, 0]
JMP L24

L25:
PUSH16 0
STR [fp, 0]

L29:
LDR [fp, 0]
LDR [fp, -2]
CMP
JEQ L31
JMP L33

L31:
JMP L30

L33:
PUSH16 0
LDR [fp, -4]
LDR [fp, 0]
CALL fib
PUSHR sp
PUSH16 2
PUSH16 2
MUL
ADD
POPR sp
CALL print_num
PUSHR sp
PUSH16 2
PUSH16 1
MUL
ADD
POPR sp
DATA __str_0
CALL print_string
PUSHR sp
PUSH16 2
PUSH16 1
MUL
ADD
POPR sp
LDR [fp, 0]
PUSH16 1
ADD
STR [fp, 0]
JMP L29

L30:
DATA __str_1
CALL print_string
PUSHR sp
PUSH16 2
PUSH16 1
MUL
ADD
POPR sp
MOV sp, fp
POPR fp
RET
