@section data
@section text
CALL main
HALT

print_string:
PUSHR fp
MOV fp, sp
PUSH16 65534
PUSHR fp
ADD
POPR sp
PUSH16 0
STORER [fp, 0]

L0:
LOADR [fp, 6]
LOADR [fp, 0]
PUSH16 1
MUL
ADD
LOADPB
PUSH16 0
PUSH16 255
AND
CMP
JEQ L2
JMP L4

L2:
JMP L1

L4:
LOADR [fp, 6]
LOADR [fp, 0]
PUSH16 1
MUL
ADD
LOADPB
POPR r0
CALL print
LOADR [fp, 0]
PUSH16 1
ADD
STORER [fp, 0]
JMP L0

L1:
MOV sp, fp
POPR fp
RET

len:
PUSHR fp
MOV fp, sp
PUSH16 65534
PUSHR fp
ADD
POPR sp
PUSH16 0
STORER [fp, 0]

L5:
LOADR [fp, 6]
LOADR [fp, 0]
PUSH16 1
MUL
ADD
LOADPB
PUSH16 0
PUSH16 255
AND
CMP
JEQ L7
JMP L9

L7:
JMP L6

L9:
LOADR [fp, 0]
PUSH16 1
ADD
STORER [fp, 0]
JMP L5

L6:
LOADR [fp, 0]
STORER [fp, 8]
MOV sp, fp
POPR fp
RET
MOV sp, fp
POPR fp
RET

print_num:
PUSHR fp
MOV fp, sp
PUSH16 65530
PUSHR fp
ADD
POPR sp
LOADR [fp, 6]
STORER [fp, 0]
PUSH16 0
STORER [fp, -2]
PUSHR sp
PUSH16 6
SUB
POPR sp
PUSHR sp
PUSH16 2
ADD
LOADR [sp, 2]
PUSH16 0
PUSH16 1
MUL
ADD
PUSH16 48
STOREPB
LOADR [sp, 2]
PUSH16 1
PUSH16 1
MUL
ADD
PUSH16 48
STOREPB
LOADR [sp, 2]
PUSH16 2
PUSH16 1
MUL
ADD
PUSH16 48
STOREPB
LOADR [sp, 2]
PUSH16 3
PUSH16 1
MUL
ADD
PUSH16 48
STOREPB
LOADR [sp, 2]
PUSH16 4
PUSH16 1
MUL
ADD
PUSH16 48
STOREPB
STORER [fp, -4]
LOADR [fp, 0]
PUSH16 0
CMP
JLT L10
JMP L12

L10:
PUSH16 45
POPR r0
CALL print
LOADR [fp, 0]
PUSH16 65535
XOR
STORER [fp, 0]
LOADR [fp, 0]
PUSH16 1
ADD
STORER [fp, 0]

L12:
LOADR [fp, 0]
PUSH16 0
CMP
JEQ L15
JMP L17

L15:
JMP L14

L17:
LOADR [fp, -4]
LOADR [fp, -2]
PUSH16 1
MUL
ADD
LOADR [fp, 0]
PUSH16 10
MOD
PUSH16 48
ADD
PUSH16 255
AND
STOREPB
LOADR [fp, -2]
PUSH16 1
ADD
STORER [fp, -2]
LOADR [fp, 0]
PUSH16 10
DIV
STORER [fp, 0]
JMP L12

L14:
LOADR [fp, -2]
PUSH16 1
SUB
STORER [fp, -2]
LOADR [fp, -2]
PUSH16 0
CMP
JLT L20
JMP L22

L20:
JMP L19

L22:
LOADR [fp, -4]
LOADR [fp, -2]
PUSH16 1
MUL
ADD
LOADPB
POPR r0
CALL print
JMP L14

L19:
MOV sp, fp
POPR fp
RET

main:
PUSHR fp
MOV fp, sp
PUSH16 0
PUSHR fp
ADD
POPR sp
PUSH16 12345
CALL print_num
PUSHR sp
PUSH16 2
PUSH16 1
MUL
ADD
POPR sp
MOV sp, fp
POPR fp
RET
